import java.util.Arrays;
import java.util.Random;

//Simulation of a boss, who is a bit more privileged than a minion.
public class Boss extends Character implements Monster {
  public Boss(String name) {
    super(name, 8, 7, 8, 7);
  }

  /**
   * The special ability that the boss will use to attack will be randomly generated by the method.
   */
  @Override
  public void strike(Character character) {
    Random random = new Random();
    int randomNumber = random.nextInt(100);
    if (randomNumber < 10) {
      ConcurrentModificationException(character.getTeam());
    } else if (randomNumber < 20) {
      NoneTermination();
    } else if (randomNumber < 35) {
      ArrayIndexOutOfBoundException(character);
    } else if (randomNumber < 50) {
      NullPointerException();
    } else {
      SyntaxError(character);
    }
    this.increaseEP(3);
  }

  /**
   * The syntax error ability decreases the HP of the enemy and if he/she dies, the EP of the boss is increased.
   * The EP of the enemy are increased as well and if the enemy is student, he/she gains 3 more KP.
   */
  @Override
  public void SyntaxError(Character enemy) {
    enemy.decreaseHP(100 * this.getAttack() / (100 + enemy.getDefence()));
    if (enemy.getHP() == 0) {
      this.increaseEP(4);
    }
    enemy.increaseEP(3);
    if (enemy instanceof Student) {
      ((Student) enemy).increaseKP(3);
    }
  }

  /**
   * The HP of the boss are increased by the amount of his/her defence.
   */
  @Override
  public void NullPointerException() {
    this.increaseHP(this.getDefence());
  }

  /**
   * Using this ability, the boss decreases the HP of the enemy two times more than the syntax error one does.
   * If the enemy dies, the EP of the minion is increased.
   * The EP of the enemy are increased as well and if the enemy is student, he/she gains 3 more KP.
   */
  @Override
  public void ArrayIndexOutOfBoundException(Character enemy) {
    enemy.decreaseHP(2 * (100 * this.getAttack() / (100 + enemy.getDefence())));
    if (enemy.getHP() == 0) {
      this.increaseEP(4);
    }
    enemy.increaseEP(3);
    if (enemy instanceof Student) {
      ((Student) enemy).increaseKP(3);
    }
  }

  /**
   * None termination ability revives all dead bosses.
   */
  @Override
  public void NoneTermination() {
    Arrays.stream(this.getTeam().getMembers()).forEach(entry -> {
      if (entry.getHP() == 0) {
        entry.increaseHP(entry.getMaxHP());
      }
    });
  }

  /**
   * By using this ability, the boss decreases the HP of all alive enemies. Each enemy receives 3 EP and if
   * the enemy is a student, he/she receives additional 3 KP. If an enemy dies, the boss gains 4 EP.
   */
  @Override
  public void ConcurrentModificationException(Team enemyTeam) {
    Arrays.stream(enemyTeam.getMembers()).forEach(entry -> {
      if (entry.getHP() != 0) {
        entry.decreaseHP((100 * this.getAttack() / (100 + entry.getDefence())));
      }
      if (entry.getHP() == 0) {
        this.increaseEP(4);
      }
      entry.increaseEP(3);
      if (entry instanceof Student) {
        ((Student) entry).increaseKP(3);
      }
    });
  }
}
